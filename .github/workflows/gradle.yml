name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]

jobs:
  build-springboot:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    # 1. 코드 체크아웃
    steps:
    - uses: actions/checkout@v4

    # 2. Java 17 세팅
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # 3. Gradle 설정
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    # 4. gradlew에 실행 권한 부여
    - name: Grant execute permission to gradlew
      run: chmod +x ./gradlew

    # 5. `application-ec2.yml`을 `resources` 폴더로 복사
    - name: Copy application-ec2.yml
      run: echo "${{ secrets.APPLICATION_EC2_YML }}" > src/main/resources/application.yml

    # 6. SpringBoot 애플리케이션 빌드
    - name: Build with Gradle Wrapper
      run: ./gradlew build

    # 7. Docker 이미지 빌드
    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/spring-cicd-test .

    # 8. Docker Hub 로그인
    - name: Docker login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    # 9. Docker Hub에 푸시
    - name: Docker Hub push
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/spring-cicd-test
